{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar heads = document.querySelectorAll(\"th\");\nvar tBody = document.querySelector(\"table > tbody\");\nvar body = document.querySelector(\"body\");\nvar sortType = \"\";\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var block = document.createElement(\"div\");\n    block.setAttribute(\"data-qa\", \"notification\");\n    block.className = \"notification \".concat(type);\n    block.style.display = \"relative\";\n    block.style.top = \"\".concat(posTop, \"px\");\n    block.style.right = \"\".concat(posRight, \"px\");\n    block.style.transition = \"all 300ms\";\n    block.innerHTML = '\\n    <h2 class=\"title\">'.concat(title, \"</h2>\\n    <p>\").concat(description, \"</p>\\n  \");\n    body.append(block);\n    setTimeout(function() {\n        block.style.opacity = 0;\n        setTimeout(function() {\n            return block.style.visibility = \"hidden\";\n        }, 1000);\n    }, 2000);\n};\nfunction sort(index) {\n    var isReverse = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var _tBody;\n    var rows = Array.from(tBody.rows).sort(function(a, b) {\n        var sortResult = a.cells[index].textContent.trim().localeCompare(b.cells[index].textContent.trim(), \"en\", {\n            numeric: true\n        });\n        return isReverse ? -sortResult : sortResult;\n    });\n    (_tBody = tBody).append.apply(_tBody, _to_consumable_array(rows));\n}\nheads.forEach(function(head, index) {\n    head.addEventListener(\"click\", function() {\n        sort(index, sortType === head.textContent);\n        if (sortType === head.textContent) sortType = \"\";\n        else sortType = head.textContent;\n    });\n});\nvar form = document.createElement(\"form\");\nform.className = \"new-employee-form\";\nfunction createFormInput(inputName, type, dataQa) {\n    var input = document.createElement(\"input\");\n    input.id = inputName;\n    input.name = inputName;\n    input.type = type;\n    input.setAttribute(\"data-qa\", dataQa);\n    var label = document.createElement(\"label\");\n    label.innerText = input.name[0].toUpperCase() + input.name.slice(1) + \":\";\n    label.appendChild(input);\n    label.htmlFor = input.id;\n    return label;\n}\nvar nameLabel = createFormInput(\"name\", \"text\", \"name\");\nvar positionLabel = createFormInput(\"position\", \"text\", \"position\");\nvar ageLabel = createFormInput(\"age\", \"number\", \"age\");\nvar salaryLabel = createFormInput(\"salary\", \"number\", \"salary\");\nvar office = document.createElement(\"select\");\nvar officeLabel = document.createElement(\"label\");\nvar options = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nfor(var i = 0; i < 6; i++){\n    var option = document.createElement(\"option\");\n    option.value = options[i];\n    option.text = options[i];\n    office.appendChild(option);\n}\noffice.setAttribute(\"data-qa\", \"office\");\nofficeLabel.innerText = \"Office:\";\nofficeLabel.appendChild(office);\nvar button = document.createElement(\"button\");\nbutton.type = \"submit\";\nbutton.innerText = \"Save to table\";\nform.appendChild(nameLabel);\nform.appendChild(positionLabel);\nform.appendChild(officeLabel);\nform.appendChild(ageLabel);\nform.appendChild(salaryLabel);\nform.appendChild(button);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var nameInput = nameLabel.children.item(0);\n    var positionInput = positionLabel.children.item(0);\n    var salaryInput = salaryLabel.children.item(0);\n    var ageInput = ageLabel.children.item(0);\n    var isError = false;\n    if (nameInput.value.trim().length < 4) {\n        isError = true;\n        pushNotification(10, 10, \"Name Error\", \"Name is invalid. \\n It's should contain 4 and more characters\", \"error\");\n    }\n    if (!positionInput.value.trim()) {\n        isError = true;\n        pushNotification(150, 10, \"Position Error\", \"Position is invalid. \\n Position can not be empty\", \"error\");\n    }\n    if (Number(ageInput.value) < 18 || Number(ageInput.value) > 90) {\n        isError = true;\n        pushNotification(290, 10, \"Age Error\", \"Age is invalid. \\n Age must to be more than 18 and less than 90\", \"error\");\n    }\n    if (Number(salaryInput.value) <= 0) {\n        isError = true;\n        pushNotification(10, 320, \"Salary Error\", \"Salary is invalid. \\n Salary must be more than 0\", \"error\");\n    }\n    if (!office.value) {\n        isError = true;\n        pushNotification(150, 320, \"Office error\", \"Office is invalid.\", \"error\");\n    }\n    if (!isError) {\n        var newRow = tBody.insertRow(tBody.rows.length);\n        newRow.addEventListener(\"click\", function() {\n            Array.from(tBody.rows).forEach(function(i) {\n                i.className = \"\";\n            });\n            newRow.className += \" active\";\n        });\n        var inputCell = newRow.insertCell();\n        var positionCell = newRow.insertCell();\n        var officeCell = newRow.insertCell();\n        var ageCell = newRow.insertCell();\n        var salaryCell = newRow.insertCell();\n        inputCell.innerText = nameInput.value;\n        positionCell.innerText = positionInput.value;\n        officeCell.innerText = office.value;\n        ageCell.innerText = ageInput.value.trim();\n        salaryCell.innerText = Number(salaryInput.value).toLocaleString(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0\n        });\n        pushNotification(10, 10, \"Published\", \"User was published.\", \"success\");\n    }\n});\nArray.from(tBody.rows).forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        Array.from(tBody.rows).forEach(function(i) {\n            i.className = \"\";\n        });\n        row.className += \" active\";\n    });\n});\nbody.appendChild(form);\n\n//# sourceMappingURL=index.54412013.js.map\n","'use strict';\n\nconst heads = document.querySelectorAll('th');\nconst tBody = document.querySelector('table > tbody');\nconst body = document.querySelector('body');\n\nlet sortType = '';\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const block = document.createElement('div');\n\n  block.setAttribute('data-qa', 'notification');\n  block.className = `notification ${type}`;\n  block.style.display = 'relative';\n  block.style.top = `${posTop}px`;\n  block.style.right = `${posRight}px`;\n  block.style.transition = 'all 300ms';\n\n  block.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  body.append(block);\n\n  setTimeout(() => {\n    block.style.opacity = 0;\n    setTimeout(() => (block.style.visibility = 'hidden'), 1000);\n  }, 2000);\n};\n\nfunction sort(index, isReverse = false) {\n  const rows = Array.from(tBody.rows).sort((a, b) => {\n    const sortResult = a.cells[index].textContent\n      .trim()\n      .localeCompare(b.cells[index].textContent.trim(), 'en', {\n        numeric: true,\n      });\n\n    return isReverse ? -sortResult : sortResult;\n  });\n\n  tBody.append(...rows);\n}\n\nheads.forEach((head, index) => {\n  head.addEventListener('click', () => {\n    sort(index, sortType === head.textContent);\n\n    if (sortType === head.textContent) {\n      sortType = '';\n    } else {\n      sortType = head.textContent;\n    }\n  });\n});\n\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nfunction createFormInput(inputName, type, dataQa) {\n  const input = document.createElement('input');\n\n  input.id = inputName;\n  input.name = inputName;\n  input.type = type;\n  input.setAttribute('data-qa', dataQa);\n\n  const label = document.createElement('label');\n\n  label.innerText = input.name[0].toUpperCase() + input.name.slice(1) + ':';\n  label.appendChild(input);\n  label.htmlFor = input.id;\n\n  return label;\n}\n\nconst nameLabel = createFormInput('name', 'text', 'name');\nconst positionLabel = createFormInput('position', 'text', 'position');\nconst ageLabel = createFormInput('age', 'number', 'age');\nconst salaryLabel = createFormInput('salary', 'number', 'salary');\n\nconst office = document.createElement('select');\nconst officeLabel = document.createElement('label');\n\nconst options = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nfor (let i = 0; i < 6; i++) {\n  const option = document.createElement('option');\n\n  option.value = options[i];\n  option.text = options[i];\n\n  office.appendChild(option);\n}\n\noffice.setAttribute('data-qa', 'office');\nofficeLabel.innerText = 'Office:';\nofficeLabel.appendChild(office);\n\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.innerText = 'Save to table';\n\nform.appendChild(nameLabel);\nform.appendChild(positionLabel);\nform.appendChild(officeLabel);\nform.appendChild(ageLabel);\nform.appendChild(salaryLabel);\nform.appendChild(button);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameInput = nameLabel.children.item(0);\n  const positionInput = positionLabel.children.item(0);\n  const salaryInput = salaryLabel.children.item(0);\n  const ageInput = ageLabel.children.item(0);\n\n  let isError = false;\n\n  if (nameInput.value.trim().length < 4) {\n    isError = true;\n\n    pushNotification(\n      10,\n      10,\n      'Name Error',\n      \"Name is invalid. \\n It's should contain 4 and more characters\",\n      'error',\n    );\n  }\n\n  if (!positionInput.value.trim()) {\n    isError = true;\n\n    pushNotification(\n      150,\n      10,\n      'Position Error',\n      'Position is invalid. \\n Position can not be empty',\n      'error',\n    );\n  }\n\n  if (Number(ageInput.value) < 18 || Number(ageInput.value) > 90) {\n    isError = true;\n\n    pushNotification(\n      290,\n      10,\n      'Age Error',\n      'Age is invalid. \\n Age must to be more than 18 and less than 90',\n      'error',\n    );\n  }\n\n  if (Number(salaryInput.value) <= 0) {\n    isError = true;\n\n    pushNotification(\n      10,\n      320,\n      'Salary Error',\n      'Salary is invalid. \\n Salary must be more than 0',\n      'error',\n    );\n  }\n\n  if (!office.value) {\n    isError = true;\n\n    pushNotification(150, 320, 'Office error', 'Office is invalid.', 'error');\n  }\n\n  if (!isError) {\n    const newRow = tBody.insertRow(tBody.rows.length);\n\n    newRow.addEventListener('click', () => {\n      Array.from(tBody.rows).forEach((i) => {\n        i.className = '';\n      });\n\n      newRow.className += ' active';\n    });\n\n    const inputCell = newRow.insertCell();\n    const positionCell = newRow.insertCell();\n    const officeCell = newRow.insertCell();\n    const ageCell = newRow.insertCell();\n    const salaryCell = newRow.insertCell();\n\n    inputCell.innerText = nameInput.value;\n    positionCell.innerText = positionInput.value;\n    officeCell.innerText = office.value;\n    ageCell.innerText = ageInput.value.trim();\n\n    salaryCell.innerText = Number(salaryInput.value).toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    });\n\n    pushNotification(10, 10, 'Published', 'User was published.', 'success');\n  }\n});\n\nArray.from(tBody.rows).forEach((row) => {\n  row.addEventListener('click', () => {\n    Array.from(tBody.rows).forEach((i) => {\n      i.className = '';\n    });\n\n    row.className += ' active';\n  });\n});\n\nbody.appendChild(form);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","heads","document","querySelectorAll","tBody","querySelector","body","sortType","pushNotification","posTop","posRight","title","description","type","block","createElement","setAttribute","className","concat","style","display","top","right","transition","innerHTML","append","setTimeout","opacity","visibility","forEach","head","index","addEventListener","sort","isReverse","arguments","rows","from","a","b","sortResult","cells","textContent","trim","localeCompare","numeric","apply","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","form","createFormInput","inputName","dataQa","input","id","label","innerText","toUpperCase","appendChild","htmlFor","nameLabel","positionLabel","ageLabel","salaryLabel","office","officeLabel","options","option","value","text","button","e","preventDefault","nameInput","children","item","positionInput","salaryInput","ageInput","isError","Number","newRow","insertRow","inputCell","insertCell","positionCell","officeCell","ageCell","salaryCell","toLocaleString","currency","minimumFractionDigits","row"],"version":3,"file":"index.54412013.js.map"}